{"is_source_file": true, "format": "JavaScript", "description": "This file contains AI logic for a Tic-Tac-Toe game, including functions for deciding the next move using a simple minimax-like approach and checking for a game winner.", "external_files": [], "external_methods": [], "published": ["getAIMove", "calculateWinner"], "classes": [], "methods": [{"name": "getAIMove(board, ai, human)", "description": "Determines the next move for the AI player by attempting to win, block the opponent, or select strategic positions.", "scope": "", "scopeKind": ""}, {"name": "calculateWinner(bd)", "description": "Checks the game board to see if there is a winner ('X' or 'O'), or null if there is no winner yet.", "scope": "", "scopeKind": ""}], "calls": ["calculateWinner"], "search-terms": ["tic-tac-toe", "AI move", "minimax", "game logic", "check winner", "board analysis"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "calculateWinner", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-48172-48234/tic_tac_toe_frontend/src/ai.js", "pattern": "/^export function calculateWinner(bd) {$/", "language": "JavaScript", "kind": "function", "signature": "(bd)"}, {"_type": "tag", "name": "getAIMove", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-48172-48234/tic_tac_toe_frontend/src/ai.js", "pattern": "/^export function getAIMove(board, ai, human) {$/", "language": "JavaScript", "kind": "function", "signature": "(board, ai, human)"}], "hash": "0d174331bd0758042c5a3bbf194363c1", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/ai.js", "revision_history": [{"29": ""}]}